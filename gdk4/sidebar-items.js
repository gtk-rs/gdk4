initSidebarItems({"constant":[["NONE_CONTENT_PROVIDER",""],["NONE_DEVICE_PAD",""],["NONE_DRAG_SURFACE",""],["NONE_DRAW_CONTEXT",""],["NONE_EVENT",""],["NONE_PAINTABLE",""],["NONE_POPUP",""],["NONE_TEXTURE",""],["NONE_TOPLEVEL",""]],"enum":[["AxisUse","An enumeration describing the way in which a device axis (valuator) maps onto the predefined valuator types that GTK understands."],["CrossingMode","Specifies the crossing mode for enter and leave events."],["DevicePadFeature","A pad feature."],["DeviceToolType","Indicates the specific type of tool being used being a tablet. Such as an airbrush, pencil, etc."],["DragCancelReason","Used in `Drag` to the reason of a cancelled DND operation."],["EventType","Specifies the type of the event."],["FullscreenMode","Indicates which monitor (in a multi-head setup) a surface should span over when in fullscreen mode."],["GLError","Error enumeration for `GLContext`."],["Gravity","Defines the reference point of a surface and is used in `PopupLayout`."],["InputSource","An enumeration describing the type of an input device in general terms."],["KeyMatch","The possible return values from `KeyEvent::matches` describe how well an event matches a given keyval and modifiers."],["MemoryFormat","`MemoryFormat` describes a format that bytes can have in memory."],["NotifyType","Specifies the kind of crossing for enter and leave events."],["ScrollDirection","Specifies the direction for scroll events."],["SubpixelLayout","This enumeration describes how the red, green and blue components of physical pixels on an output device are laid out."],["SurfaceEdge","Determines a surface edge or corner."],["TouchpadGesturePhase","Specifies the current state of a touchpad gesture. All gestures are guaranteed to begin with an event with phase `TouchpadGesturePhase::Begin`, followed by 0 or several events with phase `TouchpadGesturePhase::Update`."],["VulkanError","Error enumeration for `VulkanContext`."]],"fn":[["content_deserialize_async",""],["content_deserialize_async_future",""],["content_register_deserializer",""],["content_register_serializer",""],["content_serialize_async",""],["content_serialize_async_future",""],["events_get_angle",""],["events_get_center",""],["events_get_distance",""],["intern_mime_type",""],["keyval_convert_case",""],["keyval_from_name",""],["keyval_is_lower",""],["keyval_is_upper",""],["keyval_name",""],["keyval_to_lower",""],["keyval_to_unicode",""],["keyval_to_upper",""],["pango_layout_get_clip_region",""],["pango_layout_line_get_clip_region",""],["pixbuf_get_from_surface",""],["pixbuf_get_from_texture",""],["set_allowed_backends",""],["unicode_to_keyval",""]],"mod":[["functions",""],["prelude","Traits intended for blanket imports."]],"struct":[["AnchorHints",""],["AppLaunchContext",""],["AppLaunchContextBuilder",""],["AppLaunchContextClass",""],["AxisFlags",""],["ButtonEvent",""],["ButtonEventClass",""],["CairoContext",""],["CairoContextClass",""],["Clipboard",""],["ClipboardBuilder",""],["ClipboardClass",""],["ConfigureEvent",""],["ConfigureEventClass",""],["ContentDeserializer",""],["ContentDeserializerClass",""],["ContentFormats",""],["ContentFormatsBuilder",""],["ContentProvider",""],["ContentProviderClass",""],["ContentSerializer",""],["ContentSerializerClass",""],["CrossingEvent",""],["CrossingEventClass",""],["Cursor",""],["CursorBuilder",""],["CursorClass",""],["DNDEvent",""],["DNDEventClass",""],["DeleteEvent",""],["DeleteEventClass",""],["Device",""],["DeviceClass",""],["DevicePad",""],["DeviceTool",""],["DeviceToolBuilder",""],["DeviceToolClass",""],["Display",""],["DisplayClass",""],["DisplayManager",""],["DisplayManagerBuilder",""],["DisplayManagerClass",""],["Drag",""],["DragAction",""],["DragClass",""],["DragSurface",""],["DrawContext",""],["DrawContextClass",""],["Drop",""],["DropClass",""],["Event",""],["EventClass",""],["EventSequence",""],["FocusEvent",""],["FocusEventClass",""],["FrameClock",""],["FrameClockClass",""],["FrameClockPhase",""],["FrameTimings",""],["GLContext",""],["GLContextClass",""],["GLTexture",""],["GLTextureClass",""],["GRange",""],["GrabBrokenEvent",""],["GrabBrokenEventClass",""],["KeyEvent",""],["KeyEventClass",""],["KeymapKey",""],["MemoryTexture",""],["MemoryTextureClass",""],["ModifierType",""],["Monitor",""],["MonitorBuilder",""],["MonitorClass",""],["MotionEvent",""],["MotionEventClass",""],["PadEvent",""],["PadEventClass",""],["Paintable",""],["PaintableFlags",""],["Popup",""],["PopupLayout",""],["ProximityEvent",""],["ProximityEventClass",""],["RGBA","A `RGBA` is used to represent a (possibly translucent) color, in a way that is compatible with cairoâ€™s notion of color."],["Rectangle",""],["RgbaParseError",""],["ScrollEvent",""],["ScrollEventClass",""],["Seat",""],["SeatCapabilities",""],["SeatClass",""],["Snapshot",""],["SnapshotClass",""],["Surface",""],["SurfaceClass",""],["SurfaceState",""],["Texture",""],["TextureClass",""],["Toplevel",""],["ToplevelLayout",""],["TouchEvent",""],["TouchEventClass",""],["TouchpadEvent",""],["TouchpadEventClass",""],["VulkanContext",""],["VulkanContextClass",""]],"trait":[["ContentProviderExt","Trait containing all `ContentProvider` methods."],["DevicePadExt","Trait containing all `DevicePad` methods."],["DragSurfaceExt","Trait containing all `DragSurface` methods."],["DrawContextExt","Trait containing all `DrawContext` methods."],["EventExt","Trait containing all `Event` methods."],["PaintableExt","Trait containing all `Paintable` methods."],["PopupExt","Trait containing all `Popup` methods."],["PopupLayoutExtManual",""],["SurfaceExtManual",""],["TextureExt","Trait containing all `Texture` methods."],["ToplevelExt","Trait containing all `Toplevel` methods."]],"type":[["Atom",""]]});